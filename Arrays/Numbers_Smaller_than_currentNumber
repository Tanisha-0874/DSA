Question Link:https://leetcode.com/problems/how-many-numbers-are-smaller-than-the-current-number/

//BruteForce Approach
vector<int> smallerNumbersThanCurrent(vector<int>& nums) {
    int n = nums.size();
    vector<int> result(n);

    for (int i = 0; i < n; i++) {
        int count = 0;
        for (int j = 0; j < n; j++) {
            if (nums[j] < nums[i])
                count++;
        }
        result[i] = count;
    }

    return result;
}

//Optimal Approach
vector<int> smallerNumbersThanCurrent(vector<int>& nums) {
    vector<int> count(101, 0);  // Count frequencies
    for (int num : nums)
        count[num]++;

    // Prefix sum to know how many numbers are smaller
    for (int i = 1; i < 101; i++)
        count[i] += count[i - 1];

    vector<int> result;
    for (int num : nums) {
        if (num == 0) result.push_back(0);
        else result.push_back(count[num - 1]);
    }

    return result;
}
